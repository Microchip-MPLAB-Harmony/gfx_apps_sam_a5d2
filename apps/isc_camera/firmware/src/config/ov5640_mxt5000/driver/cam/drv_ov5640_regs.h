/*******************************************************************************
  OV5640 Camera Register Header File

  Company:
    Microchip Technology Inc.

  File Name:
    drv_ov5640_regs.h

  Summary:
    OV5640 Register Header File

  Description:
    The header file contains the OV5640 camera register mapping.
*******************************************************************************/

//DOM-IGNORE-BEGIN
/*******************************************************************************
* Copyright (C) 2018 Microchip Technology Inc. and its subsidiaries.
*
* Subject to your compliance with these terms, you may use Microchip software
* and any derivatives exclusively with Microchip products. It is your
* responsibility to comply with third party license terms applicable to your
* use of third party software (including open source software) that may
* accompany Microchip software.
*
* THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
* EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED
* WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A
* PARTICULAR PURPOSE.
*
* IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
* INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
* WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS
* BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO THE
* FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN
* ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
* THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
*******************************************************************************/
//DOM-IGNORE-END
#ifndef DRV_OV5640_REGS_H
#define DRV_OV5640_REGS_H
// *****************************************************************************
// *****************************************************************************
// Section: Data Types
// *****************************************************************************
// *****************************************************************************

typedef struct
{
    uint32_t address;
    uint32_t value;
} RegVal;

/* OV5640 CHIP ID Register Addresses */

#define OV5640_CHIP_ID_HIGH_BYTE        (0x300A)
#define OV5640_CHIP_ID_LOW_BYTE         (0x300B)

#if 0
// initialize OV5640
const static  RegVal initVals[] =
{
    { 0x3008, 0x42 }, // software power down
    { 0x3103, 0x03 }, // sysclk from pll
    { 0x3017, 0xff }, // Frex, Vsync, Href, PCLK, D[9:6] output
    { 0x3018, 0xff }, // D[5:0], GPIO[1:0] output
    { 0x3034, 0x1a }, // PLL, MIPI 10-bit
    { 0x3037, 0x13 }, // PLL
    { 0x3108, 0x01 }, // clock divider
    { 0x3630, 0x36 },
    { 0x3631, 0x0e },
    { 0x3632, 0xe2 },
    { 0x3633, 0x12 },
    { 0x3621, 0xe0 },
    { 0x3704, 0xa0 },
    { 0x3703, 0x5a },
    { 0x3715, 0x78 },
    { 0x3717, 0x01 },
    { 0x370b, 0x60 },
    { 0x3705, 0x1a },
    { 0x3905, 0x02 },
    { 0x3906, 0x10 },
    { 0x3901, 0x0a },
    { 0x3731, 0x12 },
    { 0x3600, 0x08 }, // VCM debug
    { 0x3601, 0x33 }, // VCM debug
    { 0x302d, 0x60 }, // system control
    { 0x3620, 0x52 },
    { 0x371b, 0x20 },
    { 0x471c, 0x50 },
    { 0x3a13, 0x43 }, // pre-gain = 1.05x
    { 0x3a18, 0x00 }, // AEC gain ceiling = 7.75x
    { 0x3a19, 0x7c }, // AEC gain ceiling
    { 0x3635, 0x13 },
    { 0x3636, 0x03 },
    { 0x3634, 0x40 },
    { 0x3622, 0x01 },
    
    //50/60Hz detection
    { 0x3c01, 0x34 }, // sum auto, band counter enable, threshold = 4
    { 0x3c04, 0x28 }, // threshold low sum
    { 0x3c05, 0x98 }, // threshold high sum
    { 0x3c06, 0x00 }, // light meter 1 threshold H
    { 0x3c07, 0x07 }, // light meter 1 threshold L
    { 0x3c08, 0x00 }, // light meter 2 threshold H
    { 0x3c09, 0x1c }, // light meter 2 threshold L
    { 0x3c0a, 0x9c }, // sample number H
    { 0x3c0b, 0x40 }, // sample number L
    { 0x3810, 0x00 }, // X offset
    { 0x3811, 0x10 }, // X offset
    { 0x3812, 0x00 }, // Y offset
    { 0x3708, 0x64 },
    { 0x4001, 0x02 }, // BLC start line
    { 0x4005, 0x1a }, // BLC always update
    { 0x3000, 0x00 }, // enable MCU, OTP
    { 0x3004, 0xff }, // enable BIST, MCU memory, MCU, OTP, STROBE, D5060, timing, array clock
    { 0x300e, 0x58 }, // MIPI 2 lane? power down PHY HS TX, PHY LP RX, DVP enable
    { 0x302e, 0x00 },
    //{ 0x4300, 0x30 }, // YUV 422, YUYV
    //{ 0x501f, 0x00 }, // ISP YUV 422
    { 0x4300, 0x30 }, // RGB565, R[4:0]G[5:3]G[2:0]B[4:0]
    { 0x501f, 0x01 }, // ISP RGB
    { 0x440e, 0x00 },
    { 0x5000, 0xa7 }, // LENC on, raw gamma on, BPC on, WPC on, CIP on
    
    //AEC target
    { 0x3a0f, 0x30 }, // stable in high
    { 0x3a10, 0x28 }, // stable in low
    { 0x3a1b, 0x30 }, // stable out high
    { 0x3a1e, 0x26 }, // stable out low
    { 0x3a11, 0x60 }, // fast zone high
    { 0x3a1f, 0x14 }, // fast zone low
    
    //LENC
    { 0x5800, 0x23 },
    { 0x5801, 0x14 },
    { 0x5802, 0x0f },
    { 0x5803, 0x0f },
    { 0x5804, 0x12 },
    { 0x5805, 0x26 },
    { 0x5806, 0x0c },
    { 0x5807, 0x08 },
    { 0x5808, 0x05 },
    { 0x5809, 0x05 },
    { 0x580a, 0x08 },
    { 0x580b, 0x0d },
    { 0x580c, 0x08 },
    { 0x580d, 0x03 },
    { 0x580e, 0x00 },
    { 0x580f, 0x00 },
    { 0x5810, 0x03 },
    { 0x5811, 0x09 },
    { 0x5812, 0x07 },
    { 0x5813, 0x03 },
    { 0x5814, 0x00 },
    { 0x5815, 0x01 },
    { 0x5816, 0x03 },
    { 0x5817, 0x08 },
    { 0x5818, 0x0d },
    { 0x5819, 0x08 },
    { 0x581a, 0x05 },
    { 0x581b, 0x06 },
    { 0x581c, 0x08 },
    { 0x581d, 0x0e },
    { 0x581e, 0x29 },
    { 0x581f, 0x17 },
    { 0x5820, 0x11 },
    { 0x5821, 0x11 },
    { 0x5822, 0x15 },
    { 0x5823, 0x28 },
    { 0x5824, 0x46 },
    { 0x5825, 0x26 },
    { 0x5826, 0x08 },
    { 0x5827, 0x26 },
    { 0x5828, 0x64 },
    { 0x5829, 0x26 },
    { 0x582a, 0x24 },
    { 0x582b, 0x22 },
    { 0x582c, 0x24 },
    { 0x582d, 0x24 },
    { 0x582e, 0x06 },
    { 0x582f, 0x22 },
    { 0x5830, 0x40 },
    { 0x5831, 0x42 },
    { 0x5832, 0x24 },
    { 0x5833, 0x26 },
    { 0x5834, 0x24 },
    { 0x5835, 0x22 },
    { 0x5836, 0x22 },
    { 0x5837, 0x26 },
    { 0x5838, 0x44 },
    { 0x5839, 0x24 },
    { 0x583a, 0x26 },
    { 0x583b, 0x28 },
    { 0x583c, 0x42 },
    { 0x583d, 0xce }, // LENC BR offset
    
    //AWB
    { 0x5180, 0xff }, // AWB B block
    { 0x5181, 0xf2 }, // AWB control
    { 0x5182, 0x00 }, // [7:4] max local counter, [3:0] max fast counter
    { 0x5183, 0x14 }, // AWB advance
    { 0x5184, 0x25 },
    { 0x5185, 0x24 },
    { 0x5186, 0x09 },
    { 0x5187, 0x09 },
    { 0x5188, 0x09 },
    { 0x5189, 0x75 },
    { 0x518a, 0x54 },
    { 0x518b, 0xe0 },
    { 0x518c, 0xb2 },
    { 0x518d, 0x42 },
    { 0x518e, 0x3d },
    { 0x518f, 0x56 },
    { 0x5190, 0x46 },
    { 0x5191, 0xf8 }, // AWB top limit
    { 0x5192, 0x04 }, // AWB botton limit
    { 0x5193, 0x70 }, // Red limit
    { 0x5194, 0xf0 }, // Green Limit
    { 0x5195, 0xf0 }, // Blue limit
    { 0x5196, 0x03 }, // AWB control
    { 0x5197, 0x01 }, // local limit
    { 0x5198, 0x04 },
    { 0x5199, 0x12 },
    { 0x519a, 0x04 },
    { 0x519b, 0x00 },
    { 0x519c, 0x06 },
    { 0x519d, 0x82 },
    { 0x519e, 0x38 }, // AWB control
    
    //Gamma
    { 0x5480, 0x01 }, // BIAS plus on
    { 0x5481, 0x08 },
    { 0x5482, 0x14 },
    { 0x5483, 0x28 },
    { 0x5484, 0x51 },
    { 0x5485, 0x65 },
    { 0x5486, 0x71 },
    { 0x5487, 0x7d },
    { 0x5488, 0x87 },
    { 0x5489, 0x91 },
    { 0x548a, 0x9a },
    { 0x548b, 0xaa },
    { 0x548c, 0xb8 },
    { 0x548d, 0xcd },
    { 0x548e, 0xdd },
    { 0x548f, 0xea },
    { 0x5490, 0x1d },
    
    //color matrix
    { 0x5381, 0x1e }, // CMX1 for Y
    { 0x5382, 0x5b }, // CMX2 for Y
    { 0x5383, 0x08 }, // CMX3 for Y
    { 0x5384, 0x0a }, // CMX4 for U
    { 0x5385, 0x7e }, // CMX5 for U
    { 0x5386, 0x88 }, // CMX6 for U
    { 0x5387, 0x7c }, // CMX7 for V
    { 0x5388, 0x6c }, // CMX8 for V
    { 0x5389, 0x10 }, // CMX9 for V
    { 0x538a, 0x01 }, // sign[9]
    { 0x538b, 0x98 }, // sign[8:1]
    
    //UV adjust
    { 0x5580, 0x06 }, // brightness on, saturation on
    { 0x5583, 0x40 }, // Sat U
    { 0x5584, 0x10 }, // Sat V
    { 0x5589, 0x10 }, // UV adjust th1
    { 0x558a, 0x00 }, // UV adjust th2[8]
    { 0x558b, 0xf8 }, // UV adjust th2[7:0]
    { 0x501d, 0x40 }, // enable manual offset in contrast
    
    //CIP
    { 0x5300, 0x08 }, // sharpen-MT th1
    { 0x5301, 0x30 }, // sharpen-MT th2
    { 0x5302, 0x10 }, // sharpen-MT off1
    { 0x5303, 0x00 }, // sharpen-MT off2
    { 0x5304, 0x08 }, // De-noise th1
    { 0x5305, 0x30 }, // De-noise th2
    { 0x5306, 0x08 }, // De-noise off1
    { 0x5307, 0x16 }, // De-noise off2
    { 0x5309, 0x08 }, // sharpen-TH th1
    { 0x530a, 0x30 }, // sharpen-TH th2
    { 0x530b, 0x04 }, // sharpen-TH off1
    { 0x530c, 0x06 }, // sharpen-TH off2
    { 0x5025, 0x00 },
    
    //{ 0x4741, 0x05 }, // test pattern enable
    //{ 0x503D, 0x80 }, // 
    
    { 0x3008, 0x02 }, // wake up from software power down
    
    
    
    { 0, 0 },
};

#endif

#if 1
static const RegVal initVals[] = {
	{0x3103, 0x11},
	{0x3008, 0x82},
	{0xFFFF, 0x05},
	{0x3008, 0x42},
	{0x3103, 0x03},
	{0x3017, 0xff},
	{0x3018, 0xff},

	{0x3034, 0x1a},
	{0x3035, 0x11},
	{0x3036, 0x6a},
	{0x3037, 0x14},
	{0x3108, 0x01},
	{0x303b, 0x1c},
	{0x303d, 0x30},

	{0x3630, 0x36},
	{0x3631, 0x0e},
	{0x3632, 0xe2},
	{0x3633, 0x12},
	{0x3621, 0xe0},
	{0x3704, 0xa0},
	{0x3703, 0x5a},
	{0x3715, 0x78},
	{0x3717, 0x01},
	{0x370b, 0x60},
	{0x3705, 0x1a},
	{0x3905, 0x02},
	{0x3906, 0x10},
	{0x3901, 0x0a},
	{0x3731, 0x12},
	{0x3600, 0x08},
	{0x3601, 0x33},
	{0x302d, 0x60},
	{0x3620, 0x52},
	{0x371b, 0x20},
	{0x471c, 0x50},
	{0x3a13, 0x43},
	{0x3a18, 0x00},
	{0x3a19, 0xf8},
	{0x3635, 0x13},
	{0x3636, 0x03},
	{0x3634, 0x40},
	{0x3622, 0x01},
	{0x3c01, 0x34},
	{0x3c04, 0x28},
	{0x3c05, 0x98},
	{0x3c06, 0x00},
	{0x3c07, 0x08},
	{0x3c08, 0x00},
	{0x3c09, 0x1c},
	{0x3c0a, 0x9c},
	{0x3c0b, 0x40},
	{0x3820, 0x41},
	{0x3821, 0x07},
	{0x3814, 0x31},
	{0x3815, 0x31},
	{0x3800, 0x00},
	{0x3801, 0x00},
	{0x3802, 0x00},
	{0x3803, 0x04},
	{0x3804, 0x0a},
	{0x3805, 0x3f},
	{0x3806, 0x07},
	{0x3807, 0x9b},
	{0x3808, 0x02},
	{0x3809, 0x80},
	{0x380a, 0x01},
	{0x380b, 0xe0},
	{0x380c, 0x07},
	{0x380d, 0x68},
	{0x380e, 0x03},
	{0x380f, 0xd8},
	{0x3810, 0x00},
	{0x3811, 0x10},
	{0x3812, 0x00},
	{0x3813, 0x06},
	{0x3618, 0x00},
	{0x3612, 0x29},
	{0x3708, 0x64},
	{0x3709, 0x52},
	{0x370c, 0x03},
	{0x3a02, 0x03},
	{0x3a03, 0xd8},
	{0x3a08, 0x01},
	{0x3a09, 0x27},
	{0x3a0a, 0x00},
	{0x3a0b, 0xf6},
	{0x3a0e, 0x03},
	{0x3a0d, 0x04},
	{0x3a14, 0x03},
	{0x3a15, 0xd8},
	{0x4001, 0x02},
	{0x4004, 0x02},
	{0x3000, 0x00},
	{0x3002, 0x1c},
	{0x3004, 0xff},
	{0x3006, 0xc3},
	{0x300e, 0x58},
	{0x302e, 0x00},
	{0x4300, 0xf8}, //??
	{0x501f, 0x03}, // format mux control RAW
	{0x5684, 0x05},
	{0x5685, 0x00},
	{0x5686, 0x03},
	{0x5687, 0xc0},
	{0x4713, 0x03},
	{0x4407, 0x04},
	{0x440e, 0x00},
	{0x460b, 0x37},
	{0x460c, 0x20},
	{0x4837, 0x16},
	{0x3824, 0x04},
	{0x5000, 0x06},
	{0x5001, 0x00},
	{0x3a0f, 0x30},
	{0x3a10, 0x28},
	{0x3a1b, 0x30},
	{0x3a1e, 0x26},
	{0x3a11, 0x60},
	{0x3a1f, 0x14},
	{0x3008, 0x02},

	{0x3503, 0x00},

	{0xFF, 0xFF}
};

#endif
#if 0
static const RegVal initVals[] = {
	{0x3103, 0x11}, // sysclk from pad clock
	{0x3008, 0x82}, // software reset
	{0xFFFF, 0x05}, // Sleep 5ms 
	{0x3008, 0x42}, // software power down
	{0x3103, 0x03}, // sysclk from pll
	{0x3017, 0xff}, // IO [3:0] D9-D6 output
	{0x3018, 0xff}, // IO [7:2] D5-D0 output
//System control registers
	{0x3034, 0x1a}, // PLL, MIPI 10-bit
	{0x3035, 0x11}, // System clock divider: 1  MIPI PCLK divider -1
	{0x3036, 0x6a}, // PLL multiplier : 106
	{0x3037, 0x14}, // PLL pre-divider: 4  PLL root divider: 2
	{0x3108, 0x01}, // SCLK root divider: 2
	{0x303b, 0x1c}, // SC PLLS CTRL1 - PLLS multiplier: 28
	{0x303d, 0x30}, // SC PLLS CTRL3 - PLLS pre-divider:3
/* ???? */
	{0x3630, 0x36},
	{0x3631, 0x0e},
	{0x3632, 0xe2},
	{0x3633, 0x12},
	{0x3621, 0xe0},
	{0x3704, 0xa0},
	{0x3703, 0x5a},
	{0x3715, 0x78},
	{0x3717, 0x01},
	{0x370b, 0x60},
	{0x3705, 0x1a},
	{0x3905, 0x02},
	{0x3906, 0x10},
	{0x3901, 0x0a},
	{0x3731, 0x12},
/* ???? */    

	{0x3600, 0x08}, //VCM debug  
	{0x3601, 0x33}, //VCM debug  

	{0x302d, 0x60}, // system control
	{0x3620, 0x52},
	{0x371b, 0x20},
	{0x471c, 0x50},
	{0x3a13, 0x43}, // AEC pre-gain enable; pre-gain value - 1.05x
	{0x3a18, 0x00}, // AEC gain ceiling
	{0x3a19, 0xf8}, // AEC gain ceiling = 7.75x
	{0x3635, 0x13},
	{0x3636, 0x03},
	{0x3634, 0x40},
	{0x3622, 0x01},
    //50/60Hz detection    
	{0x3c01, 0x34}, // sum auto, band counter enable, threshold = 4
	{0x3c04, 0x28}, // threshold low sum
	{0x3c05, 0x98}, // threshold high sum
	{0x3c06, 0x00}, // light meter 1 threshold H
	{0x3c07, 0x08}, // light meter 1 threshold L
	{0x3c08, 0x00}, // light meter 2 threshold H
	{0x3c09, 0x1c}, // light meter 2 threshold L
	{0x3c0a, 0x9c}, // sample number H
	{0x3c0b, 0x40}, // sample number L
	{0x3820, 0x41}, // TIMING TC REG20
	{0x3821, 0x07}, // TIMING TC REG21
	{0x3814, 0x31}, //  TIMING X INC
	{0x3815, 0x31}, //  TIMING Y INC
    //image windowing registers
	{0x3800, 0x00}, // X address start high byte
	{0x3801, 0x00}, // X address start low byte  
	{0x3802, 0x00}, // Y address start high byte
	{0x3803, 0x04}, // Y address start low byte
	{0x3804, 0x0a}, // X address end high byte
	{0x3805, 0x3f}, // X address end low byte
	{0x3806, 0x07}, // Y address end high byte
	{0x3807, 0x9b}, // Y address end low byte
        
    {0x3808, 0x02}, // sensor width DVP
	{0x3809, 0x80}, 
	{0x380a, 0x01}, // sensor height DVP
	{0x380b, 0xe0},
    
	{0x380c, 0x07}, // Total horizontal size
	{0x380d, 0x68},
	{0x380e, 0x03}, // Total vertical size
	{0x380f, 0xd8},
	{0x3810, 0x00}, // X offset
	{0x3811, 0x10}, // X offset
	{0x3812, 0x00}, // Y offset
	{0x3813, 0x06}, // Y offset
	{0x3618, 0x00},
	{0x3612, 0x29},
	{0x3708, 0x64},
	{0x3709, 0x52},
	{0x370c, 0x03},
	{0x3a02, 0x03},
	{0x3a03, 0xd8},
	{0x3a08, 0x01},
	{0x3a09, 0x27},
	{0x3a0a, 0x00},
	{0x3a0b, 0xf6},
	{0x3a0e, 0x03},
	{0x3a0d, 0x04},
	{0x3a14, 0x03},
	{0x3a15, 0xd8},
	{0x4001, 0x02}, // BLC start line
	{0x4004, 0x02}, 
	{0x3000, 0x00}, // enable MCU, OTP
	{0x3002, 0x1c},
	{0x3004, 0xff}, //enable BIST, MCU memory, MCU, OTP, STROBE, D5060, timing, array clock
	{0x3006, 0xc3},
	{0x300e, 0x58}, // MIPI 2 lane? power down PHY HS TX, PHY LP RX, DVP enable
	{0x302e, 0x00},
	{0x4300, 0x30}, // RGB565, R[4:0]G[5:3]G[2:0]B[4:0]
	{0x501f, 0x00}, // ISP RGB
	{0x4713, 0x03},
	{0x4407, 0x04},
	{0x440e, 0x00},
	{0x460b, 0x35},
	{0x460c, 0x22},
	{0x4837, 0x22},
	{0x3824, 0x02},
	{0x5000, 0xa7}, // LENC on, raw gamma on, BPC on, WPC on, CIP on
	{0x5001, 0xa3},
    //AWB
	{0x5180, 0xff}, // AWB B block
	{0x5181, 0xf2}, // AWB control
	{0x5182, 0x00}, // [7:4] max local counter, [3:0] max fast counter
	{0x5183, 0x14}, // AWB advance
	{0x5184, 0x25},
	{0x5185, 0x24},
	{0x5186, 0x09},
	{0x5187, 0x09},
	{0x5188, 0x09},
	{0x5189, 0x75},
	{0x518a, 0x54},
	{0x518b, 0xe0},
	{0x518c, 0xb2},
	{0x518d, 0x42},
	{0x518e, 0x3d},
	{0x518f, 0x56},
	{0x5190, 0x46},
	{0x5191, 0xf8}, // AWB top limit
	{0x5192, 0x04}, // AWB bottom limit
	{0x5193, 0x70}, // Red limit
	{0x5194, 0xf0}, // green limit
	{0x5195, 0xf0}, // blue limit
	{0x5196, 0x03}, //AWB control
	{0x5197, 0x01}, //local limit
	{0x5198, 0x04},
	{0x5199, 0x12},
	{0x519a, 0x04},
	{0x519b, 0x00},
	{0x519c, 0x06},
	{0x519d, 0x82},
	{0x519e, 0x38}, // AWB control
    //color matrix
	{0x5381, 0x1e}, // CMX1 for Y
	{0x5382, 0x5b}, // CMX2 for Y
	{0x5383, 0x08}, // CMX3 for Y
	{0x5384, 0x0a}, // CMX4 for u
	{0x5385, 0x7e}, // CMX5 for u
	{0x5386, 0x88}, // CMX6 for u
	{0x5387, 0x7c}, // CMX7 for v 
	{0x5388, 0x6c}, // CMX8 for v
	{0x5389, 0x10}, // CMX9 for v
	{0x538a, 0x01},  // sign[9]
	{0x538b, 0x98}, // sign[8:1]
    //CIP
	{0x5300, 0x08}, // sharpen-MT th1
	{0x5301, 0x30}, // sharpen-MT th2
	{0x5302, 0x10}, // sharpen-MT off1
	{0x5303, 0x00}, // sharpen-MT off2
	{0x5304, 0x08}, // De-noise th1
	{0x5305, 0x30}, // De-noise th2
	{0x5306, 0x08}, // De-noise off1
	{0x5307, 0x16}, // De-noise off2
	{0x5309, 0x08}, // sharpen-TH th1
	{0x530a, 0x30}, // sharpen-TH th2
	{0x530b, 0x04}, // sharpen-TH off1
	{0x530c, 0x06}, // sharpen-TH off2
    //Gamma
	{0x5480, 0x01}, // BIAS plus on
	{0x5481, 0x08},
	{0x5482, 0x14},
	{0x5483, 0x28},
	{0x5484, 0x51},
	{0x5485, 0x65},
	{0x5486, 0x71},
	{0x5487, 0x7d},
	{0x5488, 0x87},
	{0x5489, 0x91},
	{0x548a, 0x9a},
	{0x548b, 0xaa},
	{0x548c, 0xb8},
	{0x548d, 0xcd},
	{0x548e, 0xdd},
	{0x548f, 0xea},
	{0x5490, 0x1d},
    //UV adjust
	{0x5580, 0x02}, // brightness on, saturation on 
	{0x5583, 0x40}, // Sat U
	{0x5584, 0x10}, // Sat V
	{0x5589, 0x10}, // UV adjust th1
	{0x558a, 0x00}, // UV adjust th2[8]
	{0x558b, 0xf8}, // UV adjust th2[7:0]
    //LENC control
	{0x5800, 0x23},
	{0x5801, 0x14},
	{0x5802, 0x0f},
	{0x5803, 0x0f},
	{0x5804, 0x12},
	{0x5805, 0x26},
	{0x5806, 0x0c},
	{0x5807, 0x08},
	{0x5808, 0x05},
	{0x5809, 0x05},
	{0x580a, 0x08},
	{0x580b, 0x0d},
	{0x580c, 0x08},
	{0x580d, 0x03},
	{0x580e, 0x00},
	{0x580f, 0x00},
	{0x5810, 0x03},
	{0x5811, 0x09},
	{0x5812, 0x07},
	{0x5813, 0x03},
	{0x5814, 0x00},
	{0x5815, 0x01},
	{0x5816, 0x03},
	{0x5817, 0x08},
	{0x5818, 0x0d},
	{0x5819, 0x08},
	{0x581a, 0x05},
	{0x581b, 0x06},
	{0x581c, 0x08},
	{0x581d, 0x0e},
	{0x581e, 0x29},
	{0x581f, 0x17},
	{0x5820, 0x11},
	{0x5821, 0x11},
	{0x5822, 0x15},
	{0x5823, 0x28},
	{0x5824, 0x46},
	{0x5825, 0x26},
	{0x5826, 0x08},
	{0x5827, 0x26},
	{0x5828, 0x64},
	{0x5829, 0x26},
	{0x582a, 0x24},
	{0x582b, 0x22},
	{0x582c, 0x24},
	{0x582d, 0x24},
	{0x582e, 0x06},
	{0x582f, 0x22},
	{0x5830, 0x40},
	{0x5831, 0x42},
	{0x5832, 0x24},
	{0x5833, 0x26},
	{0x5834, 0x24},
	{0x5835, 0x22},
	{0x5836, 0x22},
	{0x5837, 0x26},
	{0x5838, 0x44}, 
	{0x5839, 0x24},
	{0x583a, 0x26},
	{0x583b, 0x28},
	{0x583c, 0x42},
	{0x583d, 0xce}, // LENC BR offset
    
	{0x5025, 0x00},
    //AEC/AGC control functions
	{0x3a0f, 0x30},
	{0x3a10, 0x28},
	{0x3a1b, 0x30},
	{0x3a1e, 0x26},
	{0x3a11, 0x60},
	{0x3a1f, 0x14},
    
	{0x3008, 0x02}, //System Control

	{0x3503, 0x00}, //AEC autoenable
	{0x3c07, 0x08}, // Lightmeter1 threshold
	{0x3820, 0x41}, // TIMING TC REG20
	{0x3821, 0x07}, // TIMING TC REG21
	{0x3814, 0x31}, // TIMING X INC
	{0x3815, 0x31}, // TIMING Y INC
	{0x3803, 0x04},
	{0x3807, 0x9b},
	{0x3808, 0x02},
	{0x3809, 0x80},
	{0x380a, 0x01},
	{0x380b, 0xe0},
	{0x380c, 0x07},
	{0x380d, 0x68},
	{0x380e, 0x03},
	{0x380f, 0xd8},
	{0x3813, 0x06},
	{0x3618, 0x00},
	{0x3612, 0x29},
	{0x3708, 0x62},
	{0x3709, 0x52},
	{0x370c, 0x03},
	{0x3a02, 0x03},
	{0x3a03, 0xd8},
	{0x3a0e, 0x03},
	{0x3a0d, 0x04},
	{0x3a14, 0x03},
	{0x3a15, 0xd8},
	{0x4004, 0x02},
	{0x4713, 0x03},
	{0x4407, 0x04},
	{0x460b, 0x35},
	{0x460c, 0x22},
	{0x3824, 0x02},
	{0x5001, 0xa3},
    
    //{ 0x4741, 0x05 }, // test pattern enable
    //{ 0x503D, 0x80 }, //   
    {0xFF, 0xFF}
	//{0x0, 0x0}
};
#endif




#endif // DRV_OV5640_REGS_H